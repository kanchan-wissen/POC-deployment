steps:
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/browser-use:${SHORT_SHA}'
      - '-f'
      - 'browser-use-dev/Dockerfile'
      - './browser-use-dev'
    id: 'build-browser-use'

  # Build Image 2
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/n8n:${SHORT_SHA}'
      - '-f'
      - 'n8n/Dockerfile'
      - './n8n'
    id: 'build-n8n'

  # Build Image 3
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/planner-adk:${SHORT_SHA}'
      - '-f'
      - 'planner-adk/Dockerfile'
      - './planner-adk'
    id: 'build-planner-adk'
   # Build Image 4
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/planner-backend:${SHORT_SHA}'
      - '-f'
      - 'planner-backend/Dockerfile'
      - './planner-backend'
    id: 'build-planner-backend'

  # Push Image 1 to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/browser-use:${SHORT_SHA}'
    id: 'browser-use'
    waitFor: ['build-browser-use']

  # Push Image 2 to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/n8n:${SHORT_SHA}'
    id: 'push-n8n'
    waitFor: ['build-n8n']

  # Push Image 3 to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/planner-adk:${SHORT_SHA}'
    id: 'push-planner-adk'
    waitFor: ['build-planner-adk']
    # Push Image 4 to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/planner-backend:${SHORT_SHA}'
    id: 'push-planner-backend'
    waitFor: ['build-planner-backend']
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'deploy-browser-use'
    entrypoint: gcloud
    args:
      - run
      - deploy
      - agentic-prior-cloud-run
      - --image
      - ${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/browser-use:${SHORT_SHA}
      - --platform
      - managed
      - --region
      - us-central1
logsBucket: 'agentic-prior-storage-bucket'
options:
  logging: GCS_ONLY

  